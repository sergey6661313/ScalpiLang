|Программа является функцией, а для функции действуют следующие правила интерпретации:
|  • Все строки интерпретируются как выражения. (Примеры 00 и 01 являются такими выражениями.)
|  • Блок интерпретируются как объявление в случае если он не начинается на ключевое слово.
|    вот некоторые из таких ключевых слов: doc, param, local, if, cmp, loop. 
|    Полный список ключевых слов смотреть в исходниках к интерпретатору.


| - - Выражения: - - 

i2                          |Возьмёт адресс i2.
7 => i1                     |Копирует число 7 в адресс i1
i2 => i1                    |Положит адресс i2 в адресс i1
i1' + i2' => return         |Складывает значения из адрессов: i1, i2. и выходит из программы.
| больше примеров будет в следующих примерах.





| - - Обьявления: - - 

|общий формат обьявлений:
|  <имя>'<способ_интерпретации>:<данные>

|Основные типы интерпретации чисел (По умолчанию 64 бита.):
|        '  - беззнаковое.
|        's - знаковое.
|        'f - число с плавающей точкой.
|        'd - дровью.

|правильные примеры таких обьявлений:

i4'f64: 29            |по адрессу "i4' будет Число 29 которое займёт 64 бита. (8 байт). 
                      |И будет представленно как число с плавующей точкой (см. IEEE 754.)

i1: 8                 |Число 8 расположенное по именованному адрессу "i1"
i2'64*8:              |Неинициализированный массив из 8-ми 64-битных чисел по именовоному адрессу "i2".
                      |Обратите внимание на двоеточие. 
                      |Оно нужно чтобы показать компилятору что это блок-обьявление, а не строка-выражение.
                      |Хотя после него и нет информации. 

foo'fn                             |функция foo. Код функции это тоже данные (машинный код).
  param: a1', a2',                 |внутри кода можно делать другие объявления.
  a1' + a2' => return              |Сам код внутри функции отличается от обьявлений тем что не содержит подблоков.

one_line_text: "one_line_text", 0  |однострочный текст


|В многострочном тексте отступы режуться.
multi_line_text'cstr               |многострочный текст. 
  multi                            |А сдесь ставить коментарии нельзя.
  line                             |Потому что директива 'cstr интерпретирует все подблоки как обычный текст.
  text                             |Но мы всё равно их обозначим для наглядости.


:0                  |неименованный нуль - обсолютно валидное но бессмысленное обьявление.

|Примеры неправильные:
i3's8: 270   |Число 270 нельзя представить восьми битами. Будет ошибка интерпретации.